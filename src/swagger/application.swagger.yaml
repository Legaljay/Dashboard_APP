openapi: 3.0.0
info:
  title: Application Management API
  description: API endpoints for managing applications, features, plugins, widgets, and agents
  version: 1.0.0
  contact:
    name: Wano Dashboard Team
servers:
  - url: /api/v1
    description: API v1

components:
  schemas:
    Application:
      type: object
      properties:
        id:
          type: string
          format: uuid
        businessId:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          maxLength: 500
        type:
          type: string
          enum: [web, mobile, desktop, api]
        status:
          type: string
          enum: [active, inactive, suspended, development]
        iconUrl:
          type: string
          format: uri
        appKey:
          type: string
        isProduction:
          type: boolean
        settings:
          type: object
          properties:
            theme:
              type: object
              properties:
                primary:
                  type: string
                secondary:
                  type: string
                accent:
                  type: string
            branding:
              type: object
              properties:
                logo:
                  type: string
                  format: uri
                favicon:
                  type: string
                  format: uri
                colors:
                  type: object
                  properties:
                    primary:
                      type: string
                    secondary:
                      type: string
                    background:
                      type: string
                    text:
                      type: string
            security:
              type: object
              properties:
                requireMfa:
                  type: boolean
                sessionTimeout:
                  type: integer
                  minimum: 300
                  maximum: 86400
                allowedIps:
                  type: array
                  items:
                    type: string
                    format: ipv4
                corsOrigins:
                  type: array
                  items:
                    type: string
        metadata:
          type: object
          additionalProperties: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - type
        - businessId

    ApplicationFeature:
      type: object
      properties:
        id:
          type: string
          format: uuid
        applicationId:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        type:
          type: string
        status:
          type: string
          enum: [enabled, disabled, beta]
        configuration:
          type: object
          properties:
            settings:
              type: object
              additionalProperties: true
            permissions:
              type: array
              items:
                type: string
            dependencies:
              type: array
              items:
                type: string
        metadata:
          type: object
          additionalProperties: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - applicationId
        - type

    ApplicationPlugin:
      type: object
      properties:
        id:
          type: string
          format: uuid
        applicationId:
          type: string
          format: uuid
        name:
          type: string
        version:
          type: string
        description:
          type: string
        type:
          type: string
        status:
          type: string
          enum: [active, inactive, error]
        author:
          type: string
        website:
          type: string
          format: uri
        repository:
          type: string
          format: uri
        configuration:
          type: object
          properties:
            settings:
              type: object
              additionalProperties: true
            permissions:
              type: array
              items:
                type: string
            dependencies:
              type: array
              items:
                type: string
        metadata:
          type: object
          additionalProperties: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - version
        - applicationId

    ApplicationWidget:
      type: object
      properties:
        id:
          type: string
          format: uuid
        applicationId:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        type:
          type: string
        status:
          type: string
          enum: [active, inactive]
        position:
          type: object
          properties:
            x:
              type: integer
              minimum: 0
            y:
              type: integer
              minimum: 0
            width:
              type: integer
              minimum: 1
            height:
              type: integer
              minimum: 1
        configuration:
          type: object
          properties:
            settings:
              type: object
              additionalProperties: true
            dataSource:
              type: object
              properties:
                type:
                  type: string
                endpoint:
                  type: string
                refreshInterval:
                  type: integer
                  minimum: 0
            styling:
              type: object
              additionalProperties: true
        metadata:
          type: object
          additionalProperties: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - type
        - applicationId

    ApplicationAgent:
      type: object
      properties:
        id:
          type: string
          format: uuid
        applicationId:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        type:
          type: string
          enum: [chatbot, automation, integration]
        status:
          type: string
          enum: [active, inactive, error]
        capabilities:
          type: array
          items:
            type: string
        configuration:
          type: object
          properties:
            settings:
              type: object
              additionalProperties: true
            permissions:
              type: array
              items:
                type: string
            schedule:
              type: object
              properties:
                type:
                  type: string
                  enum: [interval, cron]
                value:
                  type: string
        metadata:
          type: object
          additionalProperties: true
        lastRun:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - type
        - applicationId

paths:
  /applications:
    get:
      summary: List applications
      description: Retrieve a list of applications
      operationId: listApplications
      parameters:
        - name: businessId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: type
          in: query
          schema:
            type: string
            enum: [web, mobile, desktop, api]
        - name: status
          in: query
          schema:
            type: string
            enum: [active, inactive, suspended, development]
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: List of applications
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Application'
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                      page:
                        type: integer
                      pages:
                        type: integer
                      limit:
                        type: integer
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

    post:
      summary: Create application
      description: Create a new application
      operationId: createApplication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 100
                description:
                  type: string
                  maxLength: 500
                type:
                  type: string
                  enum: [web, mobile, desktop, api]
                iconUrl:
                  type: string
                  format: uri
                settings:
                  type: object
                  properties:
                    theme:
                      type: object
                      properties:
                        primary:
                          type: string
                        secondary:
                          type: string
                        accent:
                          type: string
                    branding:
                      type: object
                      properties:
                        logo:
                          type: string
                          format: uri
                        favicon:
                          type: string
                          format: uri
                        colors:
                          type: object
                          properties:
                            primary:
                              type: string
                            secondary:
                              type: string
                            background:
                              type: string
                            text:
                              type: string
                    security:
                      type: object
                      properties:
                        requireMfa:
                          type: boolean
                        sessionTimeout:
                          type: integer
                          minimum: 300
                          maximum: 86400
                        allowedIps:
                          type: array
                          items:
                            type: string
                            format: ipv4
                        corsOrigins:
                          type: array
                          items:
                            type: string
              required:
                - name
                - type
      responses:
        '201':
          description: Application created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '400':
          description: Invalid request body
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /applications/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    
    get:
      summary: Get application
      description: Retrieve application details
      operationId: getApplication
      responses:
        '200':
          description: Application details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Application not found

    put:
      summary: Update application
      description: Update application details
      operationId: updateApplication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 100
                description:
                  type: string
                  maxLength: 500
                iconUrl:
                  type: string
                  format: uri
                settings:
                  type: object
                  properties:
                    theme:
                      type: object
                      properties:
                        primary:
                          type: string
                        secondary:
                          type: string
                        accent:
                          type: string
                    branding:
                      type: object
                      properties:
                        logo:
                          type: string
                          format: uri
                        favicon:
                          type: string
                          format: uri
                        colors:
                          type: object
                          properties:
                            primary:
                              type: string
                            secondary:
                              type: string
                            background:
                              type: string
                            text:
                              type: string
                    security:
                      type: object
                      properties:
                        requireMfa:
                          type: boolean
                        sessionTimeout:
                          type: integer
                          minimum: 300
                          maximum: 86400
                        allowedIps:
                          type: array
                          items:
                            type: string
                            format: ipv4
                        corsOrigins:
                          type: array
                          items:
                            type: string
                metadata:
                  type: object
                  additionalProperties: true
      responses:
        '200':
          description: Application updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '400':
          description: Invalid request body
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Application not found

    delete:
      summary: Delete application
      description: Delete an application
      operationId: deleteApplication
      responses:
        '204':
          description: Application deleted
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Application not found

  /applications/{id}/features:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    
    get:
      summary: List application features
      description: Retrieve a list of application features
      operationId: listApplicationFeatures
      responses:
        '200':
          description: List of features
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationFeature'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Application not found

  /applications/{id}/features/{featureId}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: featureId
        in: path
        required: true
        schema:
          type: string
          format: uuid

    put:
      summary: Update feature
      description: Update application feature status
      operationId: updateFeature
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [enabled, disabled, beta]
              required:
                - status
      responses:
        '200':
          description: Feature updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationFeature'
        '400':
          description: Invalid request body
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Feature not found

  /applications/{id}/plugins:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    
    get:
      summary: List application plugins
      description: Retrieve a list of application plugins
      operationId: listApplicationPlugins
      responses:
        '200':
          description: List of plugins
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationPlugin'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Application not found

  /applications/{id}/plugins/{pluginId}/install:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: pluginId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    
    post:
      summary: Install plugin
      description: Install a plugin for the application
      operationId: installPlugin
      responses:
        '200':
          description: Plugin installed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationPlugin'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Plugin not found
        '409':
          description: Plugin already installed

  /applications/{id}/plugins/{pluginId}/uninstall:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: pluginId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    
    post:
      summary: Uninstall plugin
      description: Uninstall a plugin from the application
      operationId: uninstallPlugin
      responses:
        '204':
          description: Plugin uninstalled
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Plugin not found

  /applications/{id}/widgets:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    
    get:
      summary: List widgets
      description: Retrieve a list of application widgets
      operationId: listWidgets
      responses:
        '200':
          description: List of widgets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationWidget'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Application not found

    post:
      summary: Create widget
      description: Create a new widget for the application
      operationId: createWidget
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                type:
                  type: string
                position:
                  type: object
                  properties:
                    x:
                      type: integer
                      minimum: 0
                    y:
                      type: integer
                      minimum: 0
                    width:
                      type: integer
                      minimum: 1
                    height:
                      type: integer
                      minimum: 1
                configuration:
                  type: object
                  properties:
                    settings:
                      type: object
                      additionalProperties: true
                    dataSource:
                      type: object
                      properties:
                        type:
                          type: string
                        endpoint:
                          type: string
                        refreshInterval:
                          type: integer
                          minimum: 0
                    styling:
                      type: object
                      additionalProperties: true
              required:
                - name
                - type
      responses:
        '201':
          description: Widget created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationWidget'
        '400':
          description: Invalid request body
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Application not found

  /applications/{id}/widgets/{widgetId}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: widgetId
        in: path
        required: true
        schema:
          type: string
          format: uuid

    get:
      summary: Get widget
      description: Retrieve widget details
      operationId: getWidget
      responses:
        '200':
          description: Widget details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationWidget'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Widget not found

    put:
      summary: Update widget
      description: Update widget details
      operationId: updateWidget
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                position:
                  type: object
                  properties:
                    x:
                      type: integer
                      minimum: 0
                    y:
                      type: integer
                      minimum: 0
                    width:
                      type: integer
                      minimum: 1
                    height:
                      type: integer
                      minimum: 1
                configuration:
                  type: object
                  properties:
                    settings:
                      type: object
                      additionalProperties: true
                    dataSource:
                      type: object
                      properties:
                        type:
                          type: string
                        endpoint:
                          type: string
                        refreshInterval:
                          type: integer
                          minimum: 0
                    styling:
                      type: object
                      additionalProperties: true
      responses:
        '200':
          description: Widget updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationWidget'
        '400':
          description: Invalid request body
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Widget not found

    delete:
      summary: Delete widget
      description: Delete a widget
      operationId: deleteWidget
      responses:
        '204':
          description: Widget deleted
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Widget not found

  /applications/{id}/agents:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    
    get:
      summary: List agents
      description: Retrieve a list of application agents
      operationId: listAgents
      responses:
        '200':
          description: List of agents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationAgent'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Application not found

    post:
      summary: Create agent
      description: Create a new agent for the application
      operationId: createAgent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                type:
                  type: string
                  enum: [chatbot, automation, integration]
                capabilities:
                  type: array
                  items:
                    type: string
                configuration:
                  type: object
                  properties:
                    settings:
                      type: object
                      additionalProperties: true
                    permissions:
                      type: array
                      items:
                        type: string
                    schedule:
                      type: object
                      properties:
                        type:
                          type: string
                          enum: [interval, cron]
                        value:
                          type: string
              required:
                - name
                - type
      responses:
        '201':
          description: Agent created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationAgent'
        '400':
          description: Invalid request body
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Application not found

  /applications/{id}/agents/{agentId}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: agentId
        in: path
        required: true
        schema:
          type: string
          format: uuid

    get:
      summary: Get agent
      description: Retrieve agent details
      operationId: getAgent
      responses:
        '200':
          description: Agent details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationAgent'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Agent not found

    put:
      summary: Update agent
      description: Update agent details
      operationId: updateAgent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                capabilities:
                  type: array
                  items:
                    type: string
                configuration:
                  type: object
                  properties:
                    settings:
                      type: object
                      additionalProperties: true
                    permissions:
                      type: array
                      items:
                        type: string
                    schedule:
                      type: object
                      properties:
                        type:
                          type: string
                          enum: [interval, cron]
                        value:
                          type: string
      responses:
        '200':
          description: Agent updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationAgent'
        '400':
          description: Invalid request body
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Agent not found

    delete:
      summary: Delete agent
      description: Delete an agent
      operationId: deleteAgent
      responses:
        '204':
          description: Agent deleted
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Agent not found
